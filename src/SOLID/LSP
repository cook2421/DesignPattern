LSP (Liskov Substitution Principle, 리스코프 치환 원칙)



1. 자식 클래스는 최소한 자신의 부모 클래스에서 가능한 행위는 수행할 수 있어야 한다.

2. LSP를 이해하려면 일반화 관계를 다시 생각해볼 필요가 있다.

3. 일반화 관계는 'is a kind of 관계'라고도 한다.


ex) '원숭이 is a kind of 포유류', '오리너구리 is a kind of 포유류'

    * 포유류는 알을 낳지 않고 새끼를 낳아 번식한다.
    * 포유류는 젖을 먹여서 새끼를 키우고 폐를 통해 호흡한다.
    * 포유류는 체온이 일정한 정온 동물이며 털이나 두꺼운 피부로 덮여 있다.

 -> * 원숭이는 알을 낳지 않고 새끼를 낳아 번식한다.
    * 원숭이는 젖을 먹여서 새끼를 키우고 폐를 통해 호흡한다.
    * 원숭이는 체온이 일정한 정온 동물이며 털이나 두꺼운 피부로 덮여 있다.

 -> * 오리너구리는 알을 낳지 않고 새끼를 낳아 번식한다. (X)
    * 오리너구리는 젖을 먹여서 새끼를 키우고 폐를 통해 호흡한다.
    * 오리너구리는 체온이 일정한 정온 동물이며 털이나 두꺼운 피부로 덮여 있다.

 오리너구리는 알을 낳아 번식하는 동물이면서 포유류다.
 즉, 포유류에 대한 위 설명이 잘못된 것이다.


4. LSP를 만족시키는 간단한 방법은 슈퍼클래스의 메서드를 오버라이드 하지 않는 것이다.



<피터 코드 (Peter Coad)의 상속 규칙>
i. 자식 클래스와 부모 클래스 사이는 '역할 수행(is role played by)'관계가 아니어야 한다.
ii. 한 클래스의 인스턴스는 다른 서브 클래스의 객체로 변환할 필요가 절대 없어야 한다.
iii. 자식 클래스가 부모 클래스의 책임을 무시하거나 재정의하지 않고 확장만 수행해야 한다.
iv. 자식 클래스가 단지 일부 기능을 재사용할 목적으로 유틸리티 역할을 수행하는 클래스를 상속하지 않아야 한다.
v. 자식 클래스가 '역할(role)', '트랜잭션(transaction)', '디바이스(device)', 등을 특수화(specialization)해야 한다.