1. 연관 관계 (association)
  - 클래스들이 개념상 서로 연결되었음을 나타낸다.
  - 실선이나 화살표로 표시하며 보통은 한 클래스가 다른 클래스에서 제공하는 기능을 사용하는 상황일 때 표시한다.


2. 일반화 관계 (generalization)
  - 객체지향 개념에서는 상속 관계라고 한다.
  - 한 클래스가 다른 클래스를 포함하는 상위 개념일 때 이를 IS-A 관계라고 하며,
    UML에서는 일반화 관계로 모델링한다.
  - 속이 빈 화살표를 사용해 표시한다.


3. 집합 관계 (composition, aggregation)
  - 클래스들 사이의 전체 또는 부분 같은 관계를 나타낸다.
  - 집약(aggregation) 관계와 합성(composition) 관계가 존재한다.


4. 의존 관계 (dependency)
  - 연관 관계와 같이 한 클래스가 다른 클래스에서 제공하는 기능을 사용할 때를 나타낸다.
  - 차이점은 두 클래스의 관계가 한 메서드를 실행하는 동안과 같은, 매우 짧은 시간만 유지된다는 점이다.
  - 점선 화살표를 사용해 표시한다.


5. 실체화 관계 (realization)
  - 책임들의 집합인 인터페이스와 이 책임들을 실제로 실현한 클래스들 사이의 관계를 나타낸다.
  - 상속과 유사하게 빈 삼각형을 머리에 있는 실선 대신 점선을 사용해 표시한다.