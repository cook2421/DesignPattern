* 프린트 하나를 10명이 공유해서 사용한다고 치자.

* Print 클래스를 사용해 프린터를 이용하려면 Client 프로그램에서 new Printer()가 반드시 한 번만 호출되어야 한다.
  (프린터는 하나이기 때문에)

* 이를 해소하는 방법은 생성자를 외부에서 호출할 수 없게 하는 것이다.

* 자기 자신 프린터에 대한 인스턴스를 하나 만들어 외부에 제공해 줄 메서드가 필요하다.

* static 메서드 / static 변수
    - 구체적인 인스턴스에 속하는 영역이 아니고 클래스 자체에 속한다.
    - 클래스의 인스턴스를 통하지 않고서도 메서드를 실행할 수 있고 변수를 참조할 수 있다.

* 만약 new Printer()가 호출되기 전이면 인스턴스 메서드인 print() 메서드는 호출할 수 없다.




그런데,

* 다중 스레드에서 Printer 클래스를 이용할 때 인스턴스가 1개 이상 생성되는 경우가 발생할 수 있다.
    - 경합 조건(Race Condition)을 발생시키는 경우
        i. Printer 인스턴스가 아직 생성되지 않았을 때 스레드 1이 getPrinter메서드의 if문을 실행해 이미 인스턴스가 생성되었는지 확인한다.
           현재 printer변수는 null인 상태다.
        ii. 만약 스레드 1이 생성자를 호출해 인스턴스를 만들기 전 스레드 2가 if문을 실행해 printer변수가 null인지 확인한다.
            현재 printer변수는 null이므로 인스턴스를 생성하는 생성자를 호출하는 코드를 실행하게 된다.
        iii. 스레드 2도 스레드 1과 마찬가지로 인스턴스를 생성하는 코드를 실행하게 되면 결과적으로 Printer클래스의 인스턴스가 2개 생성된다.